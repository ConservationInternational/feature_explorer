<!DOCTYPE html>
<html>
<meta charset="utf-8">
<style>
body {
  font: 11px sans-serif;
}

.point {
  stroke: #000;
stroke-width: 0.0px;
    fill: #A7DBD8;
}

.point:not(:hover) {
  fill: #69D2E7;
}

</style>
<script src="//d3js.org/d3.v3.min.js"></script>
<body>
</body>
<script>

var width = window.innerWidth,
    height = window.innerHeight;

var zoom = d3.behavior.zoom()
    .scaleExtent([1, 100])
    .on("zoom", zoomed);

var drag = d3.behavior.drag()
    .origin(function(d) { return d; })
    .on("dragstart", dragstarted)
    .on("drag", dragged)
    .on("dragend", dragended);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + 0 + "," + 0 + ")")
    .call(zoom);

var rect = svg.append("rect")
    .attr("width", width)
    .attr("height", height)
    .style("fill", "none")
    .style("pointer-events", "all");

var container = svg.append("g");

function zoomed() {
  container.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
}

function dragstarted(d) {
  d3.event.sourceEvent.stopPropagation();
  d3.select(this).classed("dragging", true);
}

function dragged(d) {
  d3.select(this).attr("cx", d.x = d3.event.x).attr("cy", d.y = d3.event.y);
}

function dragended(d) {
  d3.select(this).classed("dragging", false);
}


var image_preview = svg.append("svg:image")
      .attr("xlink:href",  "")
      .attr("x", 0)
      .attr("y", 0)
      .attr("height", 640)
      .attr("width", 480);

      var scale = 10;
function image_path(url) {
  return url.replace("/datakind/image_data/samples", "img");
}
function handle_data(data) {
  var landmarks = {};
  data.landmarks.forEach(function (img) {
    landmarks[img] = true;
  });

   data.points.forEach(function (d) {
     if (d.img in landmarks) {
       landmarks[d.img] = d;
     }
   });

  var centroids = container.append("g").selectAll("rect")
      .data(data.landmarks);
  centroids.enter().append("svg:image")
    .attr("xlink:href",  function (d) { return image_path(d); })
    .attr("x", function(d) { return scale * landmarks[d].x - 32; })
    .attr("y", function(d) { return scale * landmarks[d].y - 24; })
    .attr("height", 64)
    .attr("width", 48);

  var circle = container.append("g").selectAll("circle")
      .data(data.points);

  circle.enter().append("circle")
      .attr("class", "point")
      .attr("cy", function(d) { return scale * d.x; })
      .attr("cx", function(d) { return scale * d.y; })
      .attr("r", 1.5)
      .on("mouseover", function(d) {
        var path = image_path(d.img);

        image_preview
              .attr("xlink:href",  path);
      })
}

d3.json("json/creatures_data.json", handle_data);
</script>
</html>
